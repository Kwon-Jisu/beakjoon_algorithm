Index: beakjoon_level_2/1226_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\n네이버 부스트캠프 알고리즘 스터디: 1로 만들기\nhttps://www.acmicpc.net/problem/1463\n정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.\nX가 3으로 나누어 떨어지면, 3으로 나눈다.\nX가 2로 나누어 떨어지면, 2로 나눈다.\n1을 뺀다.\n정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.\n첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.\n첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.\n\"\"\"\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\n\n\ndef min_operations_to_one(n):\n    dp = [0] * (n + 1)\n\n    for i in range(2, n + 1):\n        dp[i] = dp[i - 1] + 1\n        if i % 2 == 0:\n            dp[i] = min(dp[i], dp[i // 2] + 1)\n        if i % 3 == 0:\n            dp[i] = min(dp[i], dp[i // 3] + 1)\n\n    return dp[n]\n\n\nprint(min_operations_to_one(N))\n
===================================================================
diff --git a/beakjoon_level_2/1226_2.py b/beakjoon_level_2/1226_2.py
--- a/beakjoon_level_2/1226_2.py	
+++ b/beakjoon_level_2/1226_2.py	
@@ -15,7 +15,7 @@
 N = int(input())
 
 
-def min_operations_to_one(n):
+def to_one(n):
     dp = [0] * (n + 1)
 
     for i in range(2, n + 1):
@@ -28,4 +28,4 @@
     return dp[n]
 
 
-print(min_operations_to_one(N))
+print(to_one(N))
